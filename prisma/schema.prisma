// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user_table {
  user_id   String @id
  user_type String

  student student_table?
  admin   admin_table?
}

model student_table {
  student_id      String   @id
  name            String
  furigana        String
  gender          String
  grade           Int
  graduation_year Int
  face_photo      String?
  updated_at      DateTime @updatedAt @default(now())
  cource_id       Int
  contact1        Int?
  contact2        Int?
  affiliation     String
  notes           String?

  user      user_table    @relation(fields: [student_id], references: [user_id])
  cource    cource_table  @relation(fields: [cource_id], references: [cource_id])
  contact_1 contact_table @relation(name: "Contact1", fields: [contact1], references: [contact_id])
  contact_2 contact_table @relation(name: "Contact2", fields: [contact2], references: [contact_id])

  instruction         instruction_table[]
  contact             contact_table[]
  career_action_table career_action_table[]
}

model admin_table {
  admin_id String @id
  name     String
  furigana String

  user user_table @relation(fields: [admin_id], references: [user_id])

  instruction instruction_table[]
}

model instruction_table {
  instruction_id Int    @id @default(autoincrement())
  subject        String
  student_id     String
  admin_id       String

  student student_table @relation(fields: [student_id], references: [student_id])
  admin   admin_table   @relation(fields: [admin_id], references: [admin_id])
}

model cource_table {
  cource_id Int    @id @default(autoincrement())
  name      String

  student student_table[]
}

model contact_table {
  contact_id   Int     @id @default(autoincrement())
  contact_type String
  phone_number Int?
  email        String?
  address      String?
  student_id   String

  student student_table @relation(fields: [student_id], references: [student_id])

  student1 student_table[] @relation(name: "Contact1")
  student2 student_table[] @relation(name: "Contact2")
}

model career_action_table {
  career_action_id Int      @id @default(autoincrement())
  student_id       String
  action_date      DateTime
  notes            String?
  updated_at       DateTime @updatedAt @default(now())
  career_path_id   Int
  action_id        Int

  student     student_table     @relation(fields: [student_id], references: [student_id])
  career_path career_path_table @relation(fields: [career_action_id], references: [career_path_id])
  action      action_table      @relation(fields: [action_id], references: [action_id])
}

model action_table {
  action_id Int    @id @default(autoincrement())
  name      String

  career_action career_action_table[]
}

model career_path_table {
  career_path_id Int    @id @default(autoincrement())
  name           String
  furigana       String
  website        String

  career_action career_action_table[]
  job_listing   job_listing_table[]
}

model job_listing_table {
  job_listing_id     Int      @id @default(autoincrement())
  application_format String
  submission_date    DateTime
  visit_date         DateTime
  updated_at         DateTime @updatedAt @default(now())
  career_path_id     Int

  career_path career_path_table @relation(fields: [career_path_id], references: [career_path_id])
}

model notice_table {
<<<<<<< HEAD
  notice_id    Int      @id @default(autoincrement())
  title        String
  content      String
  start_date   DateTime
  end_date     DateTime
  updated_date DateTime @updatedAt
=======
  notice_id  Int      @id @default(autoincrement())
  title      String
  content    String
  start_date DateTime
  end_date   DateTime
  updated_at DateTime @updatedAt @default(now())
>>>>>>> c47baa344830113b3eb7e1fc4f988af267eb0323
}

