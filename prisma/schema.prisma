// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user_table {
  user_id   String @id
  name      String
  furigana  String
  user_type String

  student student_table?
  admin   admin_table?
}

model student_table {
  student_id        String   @id
  gender            String
  affiliation       String
  graduation_year   Int
  face_photo        String?
  updated_at        DateTime @default(now()) @updatedAt
  cource_id         Int
  personal_address  String?
  personal_phone    String?
  personal_email    String?
  emergency_address String?
  emergency_phone   String?

  user   user_table   @relation(fields: [student_id], references: [user_id])
  cource cource_table @relation(fields: [cource_id], references: [cource_id])

  instruction         instruction_table[]
  career_action_table career_action_table[]
}

model admin_table {
  admin_id String @id

  user user_table @relation(fields: [admin_id], references: [user_id])

  instruction instruction_table[]
}

model instruction_table {
  instruction_id Int    @id @default(autoincrement())
  subject        String
  student_id     String
  admin_id       String

  student student_table @relation(fields: [student_id], references: [student_id])
  admin   admin_table   @relation(fields: [admin_id], references: [admin_id])
}

model cource_table {
  cource_id Int    @id @default(autoincrement())
  name      String

  student student_table[]
}

model career_action_table {
  career_action_id Int      @id @default(autoincrement())
  student_id       String
  action_date      DateTime
  notes            String?
  updated_at       DateTime @default(now()) @updatedAt
  career_path_id   Int
  action_id        Int

  student     student_table     @relation(fields: [student_id], references: [student_id])
  career_path career_path_table @relation(fields: [career_path_id], references: [career_path_id])
  action      action_table      @relation(fields: [action_id], references: [action_id])
}

model action_table {
  action_id Int    @id @default(autoincrement())
  name      String @unique

  career_action career_action_table[]
}

model career_path_table {
  career_path_id Int    @id @default(autoincrement())
  name           String @unique
  furigana       String
  website        String?

  career_action career_action_table[]
  job_listing   job_listing_table[]
  obog          obog_table[]
}

model obog_table {
  oboj_id         Int @id @default(autoincrement())
  graduation_year Int
  personal_number Int
  career_path_id  Int

  career_path career_path_table @relation(fields: [career_path_id], references: [career_path_id])
}

model job_listing_table {
  job_listing_id     Int      @id @default(autoincrement())
  application_format String
  submission_date    DateTime?
  visit_date         DateTime?
  updated_at         DateTime @default(now()) @updatedAt
  career_path_id     Int
  notes              String?
  start_date         DateTime
  end_date           DateTime

  career_path career_path_table @relation(fields: [career_path_id], references: [career_path_id])
}

model notice_table {
  notice_id  Int      @id @default(autoincrement())
  title      String
  content    String
  start_date DateTime
  end_date   DateTime
  updated_at DateTime @default(now()) @updatedAt
}